// this is the SCSS boiler plate I created.
// Took me quite some time to develop this format.
// this particular boilerplate is designs for simple theming.
// please like this pen if you do, also share you comments on this.

//imports for fonts and stuff
@import url("https://fonts.googleapis.com/css2?family=Open+Sans&display=swap");

// color variables here
:root {
  // accent color hue
  --accent: hsl(291, 0%, 20%);
  //background color hue
  --background: hsl(267, 0%, 5%);
  //font color
  --font-color: #fafafa;
  //set shadows opacity
  --shadow: 0.7;
}

//utility classes

.trans {
  transition: all 0.3s ease-in-out;
}

.cursor {
  cursor: pointer;
}

//default styling

body,
html {
  font-family: "Open Sans", sans-serif;
  font-size: 14px;
  box-sizing: border-box;
  color: var(--font-color);
  margin: 0;
  padding: 0;
  width: 100%;
  height: 100%;
  overflow-x: hidden;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0;
  margin-left: 1rem;
  padding-top: 1rem;
  padding-bottom: 0.5rem;
  width: calc(100% - 3rem);
  overflow-wrap: break-word;
  word-wrap: break-word;
  hyphens: auto;
  opacity: 0.8;
}

p {
  margin: 0;
  margin-left: 1rem;
  padding-top: 1rem;
  padding-bottom: 0.1rem;
  width: calc(100% - 3rem);
  overflow-wrap: break-word;
  word-wrap: break-word;
  hyphens: auto;
  opacity: 0.65;
}

button,
button:active,
button:focus {
  outline: none;
}

//app styling

.app-root {
  width: 100vw;
  height: 100vh;
  background: linear-gradient(to bottom right, var(--background), var(--accent));
}

.social-btn {
  z-index: 999;
  border-radius: 50%;
  box-shadow: 0 5px 15px rgba(0, 0, 0, var(--shadow));
  display: flex;
  place-items: center;
  place-content: center;
  animation: glitch1 2s infinite alternate-reverse;

  svg {
    opacity: 0.7;
    animation: glitch1 2s infinite alternate-reverse;
  }
}

.social-icon-move {
  --icon-pos: -100px;
  transform: translateX(var(--icon-pos));

  @for $i from 1 through 3 {
    &:nth-child(3n + #{$i}) {
      transition: transform 0.4s;
      transition-delay: $i * 0.1s;
    }
  }
}

.toggle-social-btn {
  position: fixed;
  width: 50px;
  height: 50px;
  bottom: 1rem;
  left: 1rem;
  background: var(--accent);
  border: none;
  animation: glitch1 2s infinite alternate-reverse;

  &:hover {
    background: var(--accent);
    box-shadow: 0 5px 15px var(--accent);

    svg {
      opacity: 1;
      animation: glitch1 2s infinite alternate-reverse;
    }
  }

  svg>path {
    fill: #fff;
  }
}

.social-icon-container {
  position: fixed;
  width: 50px;
  height: 160px;
  bottom: 1rem;
  display: flex;
  flex-direction: column-reverse;
  align-items: center;
  justify-content: space-evenly;
  left: 1rem;
  bottom: calc(1rem + 50px);
}

@keyframes slideIn {
  from {
    width: 0;
  }
}

.social-icon-btn {
  width: 40px;
  height: 40px;
  background: #fff;
  margin: 0;
  padding: 0;
  text-decoration: none;
  z-index: 999;
  animation: glitch1 2s infinite alternate-reverse;

  &::before {
    content: "";
    opacity: 0;
    position: absolute;
    color: #fff;
    font-weight: 600;
    background: inherit;
    left: 35px;
    padding: 0.3rem 0.4rem;
    padding-left: 1rem;
    transition: all 0.3s;
    overflow: hidden;
    z-index: -10 !important;
    border-bottom-right-radius: 5px;
    border-top-right-radius: 5px;
    box-shadow: 10px 5px 15px rgba(0, 0, 0, var(--shadow));
    animation: glitch1 2s infinite alternate-reverse;
  }

  &:hover {
    &::before {
      animation: slideIn 0.5s linear 1;
      opacity: 1 !important;
    }

    svg {
      opacity: 1 !important;
      animation: glitch1 2s infinite alternate-reverse;
    }
  }

  svg>path {
    fill: #fff;
  }
}

.twitter {
  background: #1da1f2;

  &:hover {
    transition-delay: 0s;
    background: darken(#1da1f2, 5%);

    &::before {
      content: "Twitter";
      animation: glitch1 2s infinite alternate-reverse;
    }
  }
}

.linkedin {
  background: #0e76a8;

  &:hover {
    transition-delay: 0s;
    background: darken(#1da1f2, 5%);

    &::before {
      content: "LinkedIn";
      animation: glitch1 2s infinite alternate;
    }
  }
}

.codepen {
  background: #333;

  &:hover {
    transition-delay: 0s;
    background: darken(#333, 5%);

    &::before {
      content: "Codepen";
      animation: glitch1 2s infinite alternate;
    }
  }
}

$r: yellow;
$g: cyan;
$b: magenta;
$px: 0;
$px2: 0;

@mixin mini-glitch($c1, $c2, $coeff, $start, $end) {
  $interval: $end - $start;

  @for $i from $start through $end {
    #{$i * 1%} {
      @if $i < $start+($interval/2) {
        $px: $px + $coeff;
        $px2: -$px;
        text-shadow: #{$px}px 0 0 $c1,
        #{$px2}px 0 0 $c2;
      }

      @else {
        $px: $px - 1;
        $px2: -$px;
        text-shadow: #{$px}px 0 0 $c1,
        #{$px2}px 0 0 $c2;
      }
    }
  }

  $px: 0;
  $px2: 0;
}

@mixin big-glitch($c1, $c2, $distance, $start, $end) {
  @for $i from $start through $end {
    #{$i * 1%} {
      @if $i==$end {
        text-shadow: 0 random(10)-5 + px 0 $c1, 0 random(10)-5 + px 0 $c2;
      }

      @else {
        $px: $distance;
        $px2: -$px;
        text-shadow: #{$px}px random(10)-5+px 0 $c1,
        #{$px2}px random(10)-5+px 0 $c2;
      }
    }
  }

  $px: 0;
  $px2: 0;
}

@keyframes glitch {
  @include mini-glitch($r, $b, 1.5, 0, 10);
  @include mini-glitch($r, $g, 0.9, 11, 20);
  @include mini-glitch($b, $g, 0.6, 21, 40);

  @include big-glitch($b, $g, 40, 41, 42);

  @include mini-glitch($r, $g, 0.7, 43, 50);
  @include mini-glitch($r, $b, 1, 51, 60);

  @include big-glitch($r, $g, 40, 61, 62);

  @include mini-glitch($r, $b, 0.9, 63, 70);

  @include big-glitch($r, $b, 50, 71, 72);

  @include mini-glitch($r, $b, 1.5, 73, 80);
  @include mini-glitch($r, $g, 0.7, 81, 90);

  @include big-glitch($g, $b, 30, 91, 92);

  @include mini-glitch($b, $g, 0.9, 92, 100);
}

.text {
  padding-top: 50px;
  text-align: center;
  animation: glitch 2s infinite reverse;
}

.smiley {
  width: 270px;
  height: 200px;
  position: absolute;
  top: 0;
  right: 0;
  left: 0;
  bottom: 0;
  margin: auto;
  opacity: 0.85;
  animation: glitch1 2s infinite reverse;

  .left {
    position: relative;
    top: 50px;
    left: 50px;
    width: 50px;
    height: 50px;
    background: #fff;
    animation: beat 0.25s infinite alternate;

    &::before {
      content: "";
      position: absolute;
      top: 0px;
      left: -25px;
      width: 50px;
      height: 50px;
      background: #fff;
      border-radius: 50%;
      animation: glitch1 2s infinite alternate-reverse;
    }

    &::after {
      content: "";
      position: absolute;
      left: 0px;
      top: -25px;
      width: 50px;
      height: 50px;
      background: #fff;
      border-radius: 50%;
      animation: glitch1 2s infinite alternate-reverse;
    }
  }

  .right {
    position: absolute;
    right: 60px;
    top: 35px;
    width: 25px;
    height: 85px;
    background: #fff;
    animation-fill-mode: both;
    animation: rotate-90 2s infinite alternate-reverse;

    &::after {
      content: "";
      position: absolute;
      left: -38px;
      top: 30px;
      width: 100px;
      height: 25px;
      background: #fff;
      border-radius: 50px;
      animation: glitch1 2s infinite alternate-reverse;
    }
  }

  .smile {
    width: 100px;
    height: 25px;
    background: #fff;
    position: absolute;
    bottom: 25px;
    right: 0;
    left: 0;
    margin: auto;
    animation: glitch1 2s infinite alternate-reverse;
  }
}

@keyframes rotate-90 {
  0% {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }

  50% {
    -webkit-transform: rotate(180deg);
    transform: rotate(180deg);
  }

  100% {
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}

@keyframes beat {
  from {
    transform: rotate(45deg) scale(0.8);
  }

  to {
    transform: rotate(45deg) scale(1);
  }
}

@mixin mini-glitch1($c1, $c2, $coeff, $start, $end) {
  $interval: $end - $start;

  @for $i from $start through $end {
    #{$i * 1%} {
      @if $i < $start+($interval/2) {
        $px: $px + $coeff;
        $px2: -$px;
        box-shadow: #{$px}px 0 0 $c1,
        #{$px2}px 0 0 $c2;
      }

      @else {
        $px: $px - 1;
        $px2: -$px;
        box-shadow: #{$px}px 0 0 $c1,
        #{$px2}px 0 0 $c2;
      }
    }
  }

  $px: 0;
  $px2: 0;
}

@mixin big-glitch1($c1, $c2, $distance, $start, $end) {
  @for $i from $start through $end {
    #{$i * 1%} {
      @if $i==$end {
        box-shadow: 0 random(10)-5 + px 0 $c1, 0 random(10)-5 + px 0 $c2;
      }

      @else {
        $px: $distance;
        $px2: -$px;
        box-shadow: #{$px}px random(10)-5+px 0 $c1,
        #{$px2}px random(10)-5+px 0 $c2;
      }
    }
  }

  $px: 0;
  $px2: 0;
}

@keyframes glitch1 {
  @include mini-glitch1($r, $b, 1.5, 0, 10);
  @include mini-glitch1($r, $g, 0.9, 11, 20);
  @include mini-glitch1($b, $g, 0.6, 21, 40);

  @include big-glitch1($b, $g, 40, 41, 42);

  @include mini-glitch1($r, $g, 0.7, 43, 50);
  @include mini-glitch1($r, $b, 1, 51, 60);

  @include big-glitch1($r, $g, 40, 61, 62);

  @include mini-glitch1($r, $b, 0.9, 63, 70);

  @include big-glitch1($r, $b, 50, 71, 72);

  @include mini-glitch1($r, $b, 1.5, 73, 80);
  @include mini-glitch1($r, $g, 0.7, 81, 90);

  @include big-glitch1($g, $b, 30, 91, 92);

  @include mini-glitch1($b, $g, 0.9, 92, 100);
}