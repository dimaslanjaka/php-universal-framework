$((function(){"use strict";QUnit.module("alert plugin"),QUnit.test("should be defined on jquery object",(function(e){e.expect(1),e.ok($(document.body).alert,"alert method is defined")})),QUnit.module("alert",{beforeEach:function(){$.fn.bootstrapAlert=$.fn.alert.noConflict()},afterEach:function(){$.fn.alert=$.fn.bootstrapAlert,delete $.fn.bootstrapAlert,$("#qunit-fixture").html("")}}),QUnit.test("should provide no conflict",(function(e){e.expect(1),e.strictEqual(typeof $.fn.alert,"undefined","alert was set back to undefined (org value)")})),QUnit.test("should return jquery collection containing the element",(function(e){e.expect(2);var t=$("<div/>"),o=t.bootstrapAlert();e.ok(o instanceof $,"returns jquery collection"),e.strictEqual(o[0],t[0],"collection contains element")})),QUnit.test("should fade element out on clicking .close",(function(e){e.expect(1);var t='<div class="alert alert-danger fade show"><a class="close" href="#" data-dismiss="alert">\xd7</a><p><strong>Holy guacamole!</strong> Best check yo self, you\'re not looking too good.</p></div>',o=$(t).bootstrapAlert().appendTo($("#qunit-fixture"));o.find(".close").trigger("click"),e.strictEqual(o.hasClass("show"),!1,"remove .show class on .close click")})),QUnit.test("should remove element when clicking .close",(function(e){e.expect(2);var t=e.async(),o='<div class="alert alert-danger fade show"><a class="close" href="#" data-dismiss="alert">\xd7</a><p><strong>Holy guacamole!</strong> Best check yo self, you\'re not looking too good.</p></div>',n=$(o).appendTo("#qunit-fixture").bootstrapAlert();e.notStrictEqual($("#qunit-fixture").find(".alert").length,0,"element added to dom"),n.one("closed.bs.alert",(function(){e.strictEqual($("#qunit-fixture").find(".alert").length,0,"element removed from dom"),t()})).find(".close").trigger("click")})),QUnit.test("should not fire closed when close is prevented",(function(e){e.expect(1);var t=e.async();$('<div class="alert"/>').on("close.bs.alert",(function(o){o.preventDefault(),e.ok(!0,"close event fired"),t()})).on("closed.bs.alert",(function(){e.ok(!1,"closed event fired")})).bootstrapAlert("close")})),QUnit.test("close should use internal _element if no element provided",(function(e){e.expect(1);var t=e.async(),o=$("<div/>"),n=o.bootstrapAlert(),l=n.data("bs.alert");n.one("closed.bs.alert",(function(){e.ok("alert closed"),t()})),l.close()})),QUnit.test("dispose should remove data and the element",(function(e){e.expect(2);var t=$("<div/>"),o=t.bootstrapAlert();e.ok("undefined"!==typeof o.data("bs.alert")),o.data("bs.alert").dispose(),e.ok("undefined"===typeof o.data("bs.button"))})),QUnit.test("should return alert version",(function(e){e.expect(1),"undefined"!==typeof Alert?e.ok("string"===typeof Alert.VERSION):e.notOk()}))}));