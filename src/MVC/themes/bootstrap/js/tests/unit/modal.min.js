$((function(){"use strict";window.Util="undefined"!==typeof bootstrap?bootstrap.Util:Util,QUnit.module("modal plugin"),QUnit.test("should be defined on jquery object",(function(t){t.expect(1),t.ok($(document.body).modal,"modal method is defined")})),QUnit.module("modal",{before:function(){$('<style type="text/css"> .modal-scrollbar-measure { position: absolute; top: -9999px; width: 50px; height: 50px; overflow: scroll; } </style>').appendTo("head"),$.fn.getScrollbarWidth=$.fn.modal.Constructor.prototype._getScrollbarWidth,$("html").css("padding-right","16px")},beforeEach:function(){$.fn.bootstrapModal=$.fn.modal.noConflict()},afterEach:function(){$(".modal-backdrop, #modal-test").remove(),$(document.body).removeClass("modal-open"),$.fn.modal=$.fn.bootstrapModal,delete $.fn.bootstrapModal,$("#qunit-fixture").html("")}}),QUnit.test("should provide no conflict",(function(t){t.expect(1),t.strictEqual(typeof $.fn.modal,"undefined","modal was set back to undefined (orig value)")})),QUnit.test("should throw explicit error on undefined method",(function(t){t.expect(1);var o=$('<div id="modal-test"/>');o.bootstrapModal();try{o.bootstrapModal("noMethod")}catch(d){t.strictEqual(d.message,'No method named "noMethod"')}})),QUnit.test("should return jquery collection containing the element",(function(t){t.expect(2);var o=$('<div id="modal-test"/>'),d=o.bootstrapModal();t.ok(d instanceof $,"returns jquery collection"),t.strictEqual(d[0],o[0],"collection contains element")})),QUnit.test("should expose defaults var for settings",(function(t){t.expect(1),t.ok($.fn.bootstrapModal.Constructor.Default,"default object exposed")})),QUnit.test("should insert into dom when show method is called",(function(t){t.expect(1);var o=t.async();$('<div id="modal-test"/>').on("shown.bs.modal",(function(){t.notStrictEqual($("#modal-test").length,0,"modal inserted into dom"),o()})).bootstrapModal("show")})),QUnit.test("should fire show event",(function(t){t.expect(1);var o=t.async();$('<div id="modal-test"/>').on("show.bs.modal",(function(){t.ok(!0,"show event fired"),o()})).bootstrapModal("show")})),QUnit.test("should not fire shown when show was prevented",(function(t){t.expect(1);var o=t.async();$('<div id="modal-test"/>').on("show.bs.modal",(function(d){d.preventDefault(),t.ok(!0,"show event fired"),o()})).on("shown.bs.modal",(function(){t.ok(!1,"shown event fired")})).bootstrapModal("show")})),QUnit.test("should hide modal when hide is called",(function(t){t.expect(3);var o=t.async();$('<div id="modal-test"/>').on("shown.bs.modal",(function(){t.ok($("#modal-test").is(":visible"),"modal visible"),t.notStrictEqual($("#modal-test").length,0,"modal inserted into dom"),$(this).bootstrapModal("hide")})).on("hidden.bs.modal",(function(){t.ok(!$("#modal-test").is(":visible"),"modal hidden"),o()})).bootstrapModal("show")})),QUnit.test("should toggle when toggle is called",(function(t){t.expect(3);var o=t.async();$('<div id="modal-test"/>').on("shown.bs.modal",(function(){t.ok($("#modal-test").is(":visible"),"modal visible"),t.notStrictEqual($("#modal-test").length,0,"modal inserted into dom"),$(this).bootstrapModal("toggle")})).on("hidden.bs.modal",(function(){t.ok(!$("#modal-test").is(":visible"),"modal hidden"),o()})).bootstrapModal("toggle")})),QUnit.test('should remove from dom when click [data-dismiss="modal"]',(function(t){t.expect(3);var o=t.async();$('<div id="modal-test"><span class="close" data-dismiss="modal"/></div>').on("shown.bs.modal",(function(){t.ok($("#modal-test").is(":visible"),"modal visible"),t.notStrictEqual($("#modal-test").length,0,"modal inserted into dom"),$(this).find(".close").trigger("click")})).on("hidden.bs.modal",(function(){t.ok(!$("#modal-test").is(":visible"),"modal hidden"),o()})).bootstrapModal("toggle")})),QUnit.test('should allow modal close with "backdrop:false"',(function(t){t.expect(2);var o=t.async();$('<div id="modal-test" data-backdrop="false"/>').on("shown.bs.modal",(function(){t.ok($("#modal-test").is(":visible"),"modal visible"),$(this).bootstrapModal("hide")})).on("hidden.bs.modal",(function(){t.ok(!$("#modal-test").is(":visible"),"modal hidden"),o()})).bootstrapModal("show")})),QUnit.test("should close modal when clicking outside of modal-content",(function(t){t.expect(3);var o=t.async();$('<div id="modal-test"><div class="contents"/></div>').on("shown.bs.modal",(function(){t.notStrictEqual($("#modal-test").length,0,"modal inserted into dom"),$(".contents").trigger("click"),t.ok($("#modal-test").is(":visible"),"modal visible"),$("#modal-test").trigger("click")})).on("hidden.bs.modal",(function(){t.ok(!$("#modal-test").is(":visible"),"modal hidden"),o()})).bootstrapModal("show")})),QUnit.test('should not close modal when clicking outside of modal-content if data-backdrop="true"',(function(t){t.expect(1);var o=t.async();$('<div id="modal-test" data-backdrop="false"><div class="contents"/></div>').on("shown.bs.modal",(function(){$("#modal-test").trigger("click"),t.ok($("#modal-test").is(":visible"),"modal not hidden"),o()})).bootstrapModal("show")})),QUnit.test("should close modal when escape key is pressed via keydown",(function(t){t.expect(3);var o=t.async(),d=$('<div id="modal-test"/>');d.on("shown.bs.modal",(function(){t.ok($("#modal-test").length,"modal inserted into dom"),t.ok($("#modal-test").is(":visible"),"modal visible"),d.trigger($.Event("keydown",{which:27})),setTimeout((function(){t.ok(!$("#modal-test").is(":visible"),"modal hidden"),d.remove(),o()}),0)})).bootstrapModal("show")})),QUnit.test("should not close modal when escape key is pressed via keyup",(function(t){t.expect(3);var o=t.async(),d=$('<div id="modal-test"/>');d.on("shown.bs.modal",(function(){t.ok($("#modal-test").length,"modal inserted into dom"),t.ok($("#modal-test").is(":visible"),"modal visible"),d.trigger($.Event("keyup",{which:27})),setTimeout((function(){t.ok(d.is(":visible"),"modal still visible"),d.remove(),o()}),0)})).bootstrapModal("show")})),QUnit.test("should trigger hide event once when clicking outside of modal-content",(function(t){t.expect(1);var o,d=t.async();$('<div id="modal-test"><div class="contents"/></div>').on("shown.bs.modal",(function(){o=0,$("#modal-test").trigger("click")})).on("hide.bs.modal",(function(){o+=1,t.strictEqual(o,1,"modal hide triggered once"),d()})).bootstrapModal("show")})),QUnit.test("should remove aria-hidden attribute when shown, add it back when hidden",(function(t){t.expect(3);var o=t.async();$('<div id="modal-test" aria-hidden="true"/>').on("shown.bs.modal",(function(){t.notOk($("#modal-test").is("[aria-hidden]"),"aria-hidden attribute removed"),$(this).bootstrapModal("hide")})).on("hidden.bs.modal",(function(){t.ok($("#modal-test").is("[aria-hidden]"),"aria-hidden attribute added"),t.strictEqual($("#modal-test").attr("aria-hidden"),"true",'correct aria-hidden="true" added'),o()})).bootstrapModal("show")})),QUnit.test("should add aria-modal attribute when shown, remove it again when hidden",(function(t){t.expect(3);var o=t.async();$('<div id="modal-test"/>').on("shown.bs.modal",(function(){t.ok($("#modal-test").is("[aria-modal]"),"aria-modal attribute added"),t.strictEqual($("#modal-test").attr("aria-modal"),"true",'correct aria-modal="true" added'),$(this).bootstrapModal("hide")})).on("hidden.bs.modal",(function(){t.notOk($("#modal-test").is("[aria-modal]"),"aria-modal attribute removed"),o()})).bootstrapModal("show")})),QUnit.test('should add role="dialog" attribute when shown, remove it again when hidden',(function(t){t.expect(3);var o=t.async();$('<div id="modal-test"/>').on("shown.bs.modal",(function(){t.ok($("#modal-test").is("[role]"),"role attribute added"),t.strictEqual($("#modal-test").attr("role"),"dialog",'correct role="dialog" added'),$(this).bootstrapModal("hide")})).on("hidden.bs.modal",(function(){t.notOk($("#modal-test").is("[role]"),"role attribute removed"),o()})).bootstrapModal("show")})),QUnit.test('should close reopened modal with [data-dismiss="modal"] click',(function(t){t.expect(2);var o=t.async();$('<div id="modal-test"><div class="contents"><div id="close" data-dismiss="modal"/></div></div>').one("shown.bs.modal",(function(){$("#close").trigger("click")})).one("hidden.bs.modal",(function(){t.ok(!$("#modal-test").is(":visible"),"modal hidden"),$(this).one("shown.bs.modal",(function(){$("#close").trigger("click")})).one("hidden.bs.modal",(function(){t.ok(!$("#modal-test").is(":visible"),"modal hidden"),o()})).bootstrapModal("show")})).bootstrapModal("show")})),QUnit.test("should restore focus to toggling element when modal is hidden after having been opened via data-api",(function(t){t.expect(1);var o=t.async(),d=$('<button data-toggle="modal" data-target="#modal-test"/>').appendTo("#qunit-fixture");$('<div id="modal-test"><div class="contents"><div id="close" data-dismiss="modal"/></div></div>').on("hidden.bs.modal",(function(){setTimeout((function(){t.ok($(document.activeElement).is(d),"toggling element is once again focused"),o()}),0)})).on("shown.bs.modal",(function(){$("#close").trigger("click")})).appendTo("#qunit-fixture"),d.trigger("click")})),QUnit.test("should not restore focus to toggling element if the associated show event gets prevented",(function(t){t.expect(1);var o=t.async(),d=$('<button data-toggle="modal" data-target="#modal-test"/>').appendTo("#qunit-fixture"),e=$('<button id="other-btn"/>').appendTo("#qunit-fixture");$('<div id="modal-test"><div class="contents"><div id="close" data-dismiss="modal"/></div>').one("show.bs.modal",(function(t){t.preventDefault(),e.trigger("focus"),setTimeout($.proxy((function(){$(this).bootstrapModal("show")}),this),0)})).on("hidden.bs.modal",(function(){setTimeout((function(){t.ok($(document.activeElement).is(e),"focus returned to toggling element"),o()}),0)})).on("shown.bs.modal",(function(){$("#close").trigger("click")})).appendTo("#qunit-fixture"),d.trigger("click")})),QUnit.test("should adjust the inline padding of the modal when opening",(function(t){t.expect(1);var o=t.async();$('<div id="modal-test"/>').on("shown.bs.modal",(function(){var d=$(this).getScrollbarWidth()+"px",e=$(this).css("padding-right");t.strictEqual(e,d,"modal padding should be adjusted while opening"),o()})).bootstrapModal("show")})),QUnit.test("should adjust the inline body padding when opening and restore when closing",(function(t){t.expect(2);var o=t.async(),d=$(document.body),e=d.css("padding-right");$('<div id="modal-test"/>').on("hidden.bs.modal",(function(){var i=d.css("padding-right");t.strictEqual(i,e,"body padding should be reset after closing"),d.removeAttr("style"),o()})).on("shown.bs.modal",(function(){var o=parseFloat(e)+$(this).getScrollbarWidth()+"px",i=d.css("padding-right");t.strictEqual(i,o,"body padding should be adjusted while opening"),$(this).bootstrapModal("hide")})).bootstrapModal("show")})),QUnit.test("should store the original body padding in data-padding-right before showing",(function(t){t.expect(2);var o=t.async(),d=$(document.body),e="0px";d.css("padding-right",e),$('<div id="modal-test"/>').on("hidden.bs.modal",(function(){t.strictEqual(typeof d.data("padding-right"),"undefined","data-padding-right should be cleared after closing"),d.removeAttr("style"),o()})).on("shown.bs.modal",(function(){t.strictEqual(d.data("padding-right"),e,"original body padding should be stored in data-padding-right"),$(this).bootstrapModal("hide")})).bootstrapModal("show")})),QUnit.test("should not adjust the inline body padding when it does not overflow",(function(t){t.expect(1);var o=t.async(),d=$(document.body),e=d.css("padding-right");d.css("overflow","hidden"),$("html").css("padding-right","0px"),$('<div id="modal-test"/>').on("shown.bs.modal",(function(){var i=d.css("padding-right");t.strictEqual(i,e,"body padding should not be adjusted"),$(this).bootstrapModal("hide"),d.css("overflow","auto"),$("html").css("padding-right","16px"),o()})).bootstrapModal("show")})),QUnit.test("should adjust the inline padding of fixed elements when opening and restore when closing",(function(t){t.expect(2);var o=t.async(),d=$('<div class="fixed-top"></div>').appendTo("#qunit-fixture"),e=d.css("padding-right");$('<div id="modal-test"/>').on("hidden.bs.modal",(function(){var i=d.css("padding-right");t.strictEqual(i,e,"fixed element padding should be reset after closing"),d.remove(),o()})).on("shown.bs.modal",(function(){var o=parseFloat(e)+$(this).getScrollbarWidth()+"px",i=d.css("padding-right");t.strictEqual(i,o,"fixed element padding should be adjusted while opening"),$(this).bootstrapModal("hide")})).bootstrapModal("show")})),QUnit.test("should store the original padding of fixed elements in data-padding-right before showing",(function(t){t.expect(2);var o=t.async(),d=$('<div class="fixed-top"></div>').appendTo("#qunit-fixture"),e="0px";d.css("padding-right",e),$('<div id="modal-test"/>').on("hidden.bs.modal",(function(){t.strictEqual(typeof d.data("padding-right"),"undefined","data-padding-right should be cleared after closing"),d.remove(),o()})).on("shown.bs.modal",(function(){t.strictEqual(d.data("padding-right"),e,"original fixed element padding should be stored in data-padding-right"),$(this).bootstrapModal("hide")})).bootstrapModal("show")})),QUnit.test("should adjust the inline margin of sticky elements when opening and restore when closing",(function(t){t.expect(2);var o=t.async(),d=$('<div class="sticky-top"></div>').appendTo("#qunit-fixture"),e=d.css("margin-right");$('<div id="modal-test"/>').on("hidden.bs.modal",(function(){var i=d.css("margin-right");t.strictEqual(i,e,"sticky element margin should be reset after closing"),d.remove(),o()})).on("shown.bs.modal",(function(){var o=parseFloat(e)-$(this).getScrollbarWidth()+"px",i=d.css("margin-right");t.strictEqual(i,o,"sticky element margin should be adjusted while opening"),$(this).bootstrapModal("hide")})).bootstrapModal("show")})),QUnit.test("should store the original margin of sticky elements in data-margin-right before showing",(function(t){t.expect(2);var o=t.async(),d=$('<div class="sticky-top"></div>').appendTo("#qunit-fixture"),e="0px";d.css("margin-right",e),$('<div id="modal-test"/>').on("hidden.bs.modal",(function(){t.strictEqual(typeof d.data("margin-right"),"undefined","data-margin-right should be cleared after closing"),d.remove(),o()})).on("shown.bs.modal",(function(){t.strictEqual(d.data("margin-right"),e,"original sticky element margin should be stored in data-margin-right"),$(this).bootstrapModal("hide")})).bootstrapModal("show")})),QUnit.test("should ignore values set via CSS when trying to restore body padding after closing",(function(t){t.expect(1);var o=t.async(),d=$(document.body),e=$("<style>body { padding-right: 42px; }</style>").appendTo("head");$('<div id="modal-test"/>').on("hidden.bs.modal",(function(){t.strictEqual(d.attr("style").indexOf("padding-right"),-1,"body does not have inline padding set"),e.remove(),o()})).on("shown.bs.modal",(function(){$(this).bootstrapModal("hide")})).bootstrapModal("show")})),QUnit.test("should ignore other inline styles when trying to restore body padding after closing",(function(t){t.expect(2);var o=t.async(),d=$(document.body),e=$("<style>body { padding-right: 42px; }</style>").appendTo("head");d.css("color","red"),$('<div id="modal-test"/>').on("hidden.bs.modal",(function(){t.strictEqual(d[0].style.paddingRight,"","body does not have inline padding set"),t.strictEqual(d[0].style.color,"red","body still has other inline styles set"),d.removeAttr("style"),e.remove(),o()})).on("shown.bs.modal",(function(){$(this).bootstrapModal("hide")})).bootstrapModal("show")})),QUnit.test("should properly restore non-pixel inline body padding after closing",(function(t){t.expect(1);var o=t.async(),d=$(document.body);d.css("padding-right","5%"),$('<div id="modal-test"/>').on("hidden.bs.modal",(function(){t.strictEqual(d[0].style.paddingRight,"5%","body does not have inline padding set"),d.removeAttr("style"),o()})).on("shown.bs.modal",(function(){$(this).bootstrapModal("hide")})).bootstrapModal("show")})),QUnit.test("should not follow link in area tag",(function(t){t.expect(2);var o=t.async();$('<map><area id="test" shape="default" data-toggle="modal" data-target="#modal-test" href="demo.html"/></map>').appendTo("#qunit-fixture"),$('<div id="modal-test"><div class="contents"><div id="close" data-dismiss="modal"/></div></div>').appendTo("#qunit-fixture"),$("#test").on("click.bs.modal.data-api",(function(d){t.notOk(d.isDefaultPrevented(),"navigating to href will happen"),setTimeout((function(){t.ok(d.isDefaultPrevented(),"model shown instead of navigating to href"),o()}),1)})).trigger("click")})),QUnit.test("should not parse target as html",(function(t){t.expect(1);var o=t.async(),d=$('<button data-toggle="modal" data-target="&lt;div id=&quot;modal-test&quot;&gt;&lt;div class=&quot;contents&quot;&lt;div&lt;div id=&quot;close&quot; data-dismiss=&quot;modal&quot;/&gt;&lt;/div&gt;&lt;/div&gt;"/>').appendTo("#qunit-fixture");d.trigger("click"),setTimeout((function(){t.strictEqual($("#modal-test").length,0,"target has not been parsed and added to the document"),o()}),0)})),QUnit.test("should not execute js from target",(function(t){t.expect(0);var o=t.async(),d=$('<button data-toggle="modal" data-target="&lt;div&gt;&lt;image src=&quot;missing.png&quot; onerror=&quot;$(&apos;#qunit-fixture button.control&apos;).trigger(&apos;click&apos;)&quot;&gt;&lt;/div&gt;"/>').appendTo("#qunit-fixture");$("<button>").addClass("control").on("click",(function(){t.notOk(!0,"XSS payload is not executed as js")})).appendTo("#qunit-fixture"),d.trigger("click"),setTimeout(o,500)})),QUnit.test("should not try to open a modal which is already visible",(function(t){t.expect(1);var o=t.async(),d=0;$('<div id="modal-test"/>').on("shown.bs.modal",(function(){d++})).on("hidden.bs.modal",(function(){t.strictEqual(d,1,"show() runs only once"),o()})).bootstrapModal("show").bootstrapModal("show").bootstrapModal("hide")})),QUnit.test("transition duration should be the modal-dialog duration before triggering shown event",(function(t){t.expect(1);var o=t.async(),d=["<style>","  .modal.fade .modal-dialog {","    transition: -webkit-transform .3s ease-out;","    transition: transform .3s ease-out;","    transition: transform .3s ease-out,-webkit-transform .3s ease-out;","    -webkit-transform: translate(0,-50px);","    transform: translate(0,-50px);","  }","</style>"].join(""),e=$(d).appendTo("head"),i=['<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">','  <div class="modal-dialog" role="document">','    <div class="modal-content">','      <div class="modal-body">...</div>',"    </div>","  </div>","</div>"].join(""),a=$(i).appendTo("#qunit-fixture"),n=300,s=sinon.spy(Util,"getTransitionDurationFromElement");a.on("shown.bs.modal",(function(){t.ok(s.returned(n)),e.remove(),s.restore(),o()})).bootstrapModal("show")})),QUnit.test("should dispose modal",(function(t){t.expect(3);var o=t.async(),d=$(['<div id="modal-test">','  <div class="modal-dialog">','    <div class="modal-content">','      <div class="modal-body" />',"    </div>","  </div>","</div>"].join("")).appendTo("#qunit-fixture");d.on("shown.bs.modal",(function(){var d=sinon.spy($.fn,"off");$(this).bootstrapModal("dispose");var e=[];$._data(document,"events").click.forEach((function(t){"bs.data-api.modal"===t.namespace&&e.push(t)})),t.ok("undefined"===typeof $(this).data("bs.modal"),"modal data object was disposed"),t.ok(4===d.callCount,"`jQuery.off` was called"),t.ok(1===e.length,"`Event.CLICK_DATA_API` on `document` was not removed"),$.fn.off.restore(),o()})).bootstrapModal("show")})),QUnit.test("should not adjust the inline body padding when it does not overflow, even on a scaled display",(function(t){t.expect(1);var o=t.async(),d=$(['<div id="modal-test">','  <div class="modal-dialog">','    <div class="modal-content">','      <div class="modal-body" />',"    </div>","  </div>","</div>"].join("")).appendTo("#qunit-fixture"),e=window.getComputedStyle(document.body).paddingRight;document.body.style.margin="0",document.body.style.overflow="hidden",document.documentElement.style.paddingRight=".48px",d.on("shown.bs.modal",(function(){var d=window.getComputedStyle(document.body).paddingRight;t.strictEqual(d,e,"body padding should not be adjusted"),document.body.style.removeProperty("margin"),document.body.style.removeProperty("overflow"),document.documentElement.style.paddingRight="16px",o()})).bootstrapModal("show")})),QUnit.test("should enforce focus",(function(t){t.expect(4);var o=t.async(),d=$(['<div id="modal-test" data-show="false">','  <div class="modal-dialog">','    <div class="modal-content">','      <div class="modal-body" />',"    </div>","  </div>","</div>"].join("")).bootstrapModal().appendTo("#qunit-fixture"),e=d.data("bs.modal"),i=sinon.spy(e,"_enforceFocus"),a=sinon.spy($(document),"off"),n=sinon.spy($(document),"on");d.one("shown.bs.modal",(function(){t.ok(i.called,"_enforceFocus called"),t.ok(a.withArgs("focusin.bs.modal")),t.ok(n.withArgs("focusin.bs.modal"));var d=sinon.spy(e._element,"focus"),s=$.Event("focusin",{target:$("#qunit-fixture")[0]});$(document).one("focusin",(function(){t.ok(d.called),o()})),$(document).trigger(s)})).bootstrapModal("show")})),QUnit.test("should scroll to top of the modal body if the modal has .modal-dialog-scrollable class",(function(t){t.expect(2);var o=t.async(),d=$(['<div id="modal-test">','  <div class="modal-dialog modal-dialog-scrollable">','    <div class="modal-content">','      <div class="modal-body" style="height: 100px; overflow-y: auto;">','        <div style="height: 200px" />',"      </div>","    </div>","  </div>","</div>"].join("")).appendTo("#qunit-fixture"),e=$(".modal-body");e.scrollTop(100),t.ok(e.scrollTop()>95&&e.scrollTop()<=100),d.on("shown.bs.modal",(function(){t.strictEqual(e.scrollTop(),0,"modal body scrollTop should be 0 when opened"),o()})).bootstrapModal("show")})),QUnit.test("should set .modal's scroll top to 0 if .modal-dialog-scrollable and modal body do not exists",(function(t){t.expect(1);var o=t.async(),d=$(['<div id="modal-test">','  <div class="modal-dialog modal-dialog-scrollable">','    <div class="modal-content">',"    </div>","  </div>","</div>"].join("")).appendTo("#qunit-fixture");d.on("shown.bs.modal",(function(){t.strictEqual(d.scrollTop(),0),o()})).bootstrapModal("show")})),QUnit.test("should not close modal when clicking outside of modal-content if backdrop = static",(function(t){t.expect(1);var o=t.async(),d=$('<div class="modal" data-backdrop="static"><div class="modal-dialog" /></div>').appendTo("#qunit-fixture");d.on("shown.bs.modal",(function(){d.trigger("click"),setTimeout((function(){var e=d.data("bs.modal");t.strictEqual(e._isShown,!0),o()}),10)})).on("hidden.bs.modal",(function(){t.strictEqual(!0,!1,"should not hide the modal")})).bootstrapModal({backdrop:"static"})})),QUnit.test("should close modal when escape key is pressed with keyboard = true and backdrop is static",(function(t){t.expect(1);var o=t.async(),d=$('<div class="modal" data-backdrop="static" data-keyboard="true"><div class="modal-dialog" /></div>').appendTo("#qunit-fixture");d.on("shown.bs.modal",(function(){d.trigger($.Event("keydown",{which:27})),setTimeout((function(){var e=d.data("bs.modal");t.strictEqual(e._isShown,!1),o()}),10)})).bootstrapModal({backdrop:"static",keyboard:!0})})),QUnit.test("should not close modal when escape key is pressed with keyboard = false and backdrop = static",(function(t){t.expect(1);var o=t.async(),d=$('<div class="modal" data-backdrop="static" data-keyboard="false"><div class="modal-dialog" /></div>').appendTo("#qunit-fixture");d.on("shown.bs.modal",(function(){d.trigger($.Event("keydown",{which:27})),setTimeout((function(){var e=d.data("bs.modal");t.strictEqual(e._isShown,!0),o()}),10)})).on("hidden.bs.modal",(function(){t.strictEqual(!1,!0,"should not hide the modal")})).bootstrapModal({backdrop:"static",keyboard:!1})})),QUnit.test("should not overflow when clicking outside of modal-content if backdrop = static",(function(t){t.expect(1);var o=t.async(),d=$('<div class="modal" data-backdrop="static"><div class="modal-dialog" style="transition-duration: 20ms;"/></div>').appendTo("#qunit-fixture");d.on("shown.bs.modal",(function(){d.trigger("click"),setTimeout((function(){t.strictEqual(d[0].clientHeight,d[0].scrollHeight),o()}),20)})).bootstrapModal({backdrop:"static"})})),QUnit.test("should get modal-static class when clicking outside of modal-content if backdrop = static",(function(t){t.expect(1);var o=t.async(),d=$('<div class="modal" data-backdrop="static"><div class="modal-dialog" style="transition-duration: 20ms;"/></div>').appendTo("#qunit-fixture");d.on("shown.bs.modal",(function(){d.trigger("click"),setTimeout((function(){t.ok(d.hasClass("modal-static"),"has modal-static class"),o()}),0)})).bootstrapModal({backdrop:"static"})})),QUnit.test("should not get modal-static class when clicking outside of modal-content if backdrop = static and event is prevented",(function(t){t.expect(2);var o=t.async(),d=$('<div class="modal" data-backdrop="static"><div class="modal-dialog" style="transition-duration: 20ms;"/></div>').appendTo("#qunit-fixture");d.on("hidePrevented.bs.modal",(function(o){t.ok(!0,"should trigger hidePrevented event"),o.preventDefault()})),d.on("shown.bs.modal",(function(){d.trigger("click"),setTimeout((function(){t.notOk(d.hasClass("modal-static"),"should not have modal-static class"),o()}),0)})).bootstrapModal({backdrop:"static"})}))}));