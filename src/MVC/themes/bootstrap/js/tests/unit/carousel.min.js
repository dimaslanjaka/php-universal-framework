$((function(){"use strict";window.Carousel="undefined"!==typeof bootstrap?bootstrap.Carousel:Carousel;var e=window.PointerEvent;window.MSPointerEvent=null;var t=Boolean(window.PointerEvent||window.MSPointerEvent);function i(){window.PointerEvent=null}function a(){window.PointerEvent=e}var s=["<style>","  .carousel.pointer-event { -ms-touch-action: none; touch-action: none; }","</style>"].join("");QUnit.module("carousel plugin"),QUnit.test("should be defined on jQuery object",(function(e){e.expect(1),e.ok($(document.body).carousel,"carousel method is defined")})),QUnit.module("carousel",{beforeEach:function(){$.fn.bootstrapCarousel=$.fn.carousel.noConflict()},afterEach:function(){$.fn.carousel=$.fn.bootstrapCarousel,delete $.fn.bootstrapCarousel,$("#qunit-fixture").html("")}}),QUnit.test("should provide no conflict",(function(e){e.expect(1),e.strictEqual(typeof $.fn.carousel,"undefined","carousel was set back to undefined (orig value)")})),QUnit.test("should return version",(function(e){e.expect(1),e.strictEqual(typeof Carousel.VERSION,"string")})),QUnit.test("should return default parameters",(function(e){e.expect(1);var t=Carousel.Default;e.strictEqual(t.touch,!0)})),QUnit.test("should throw explicit error on undefined method",(function(e){e.expect(1);var t=$("<div/>");t.bootstrapCarousel();try{t.bootstrapCarousel("noMethod")}catch(i){e.strictEqual(i.message,'No method named "noMethod"')}})),QUnit.test("should return jquery collection containing the element",(function(e){e.expect(2);var t=$("<div/>"),i=t.bootstrapCarousel();e.ok(i instanceof $,"returns jquery collection"),e.strictEqual(i[0],t[0],"collection contains element")})),QUnit.test("should type check config options",(function(e){var t;e.expect(2);var i='CAROUSEL: Option "interval" provided type "string" but expected type "(number|boolean)".',a={interval:"fat sux"};try{$("<div/>").bootstrapCarousel(a)}catch(s){t=s.message}e.ok(t===i,"correct error message"),a={keyboard:document.createElement("div")},i='CAROUSEL: Option "keyboard" provided type "element" but expected type "boolean".';try{$("<div/>").bootstrapCarousel(a)}catch(s){t=s.message}e.ok(t===i,"correct error message")})),QUnit.test("should not fire slid when slide is prevented",(function(e){e.expect(1);var t=e.async();$('<div class="carousel"/>').on("slide.bs.carousel",(function(i){i.preventDefault(),e.ok(!0,"slide event fired"),t()})).on("slid.bs.carousel",(function(){e.ok(!1,"slid event fired")})).bootstrapCarousel("next")})),QUnit.test("should reset when slide is prevented",(function(e){e.expect(6);var t='<div id="carousel-example-generic" class="carousel slide"><ol class="carousel-indicators"><li data-target="#carousel-example-generic" data-slide-to="0" class="active"/><li data-target="#carousel-example-generic" data-slide-to="1"/><li data-target="#carousel-example-generic" data-slide-to="2"/></ol><div class="carousel-inner"><div class="carousel-item active"><div class="carousel-caption"></div></div><div class="carousel-item"><div class="carousel-caption"></div></div><div class="carousel-item"><div class="carousel-caption"></div></div></div><a class="left carousel-control" href="#carousel-example-generic" data-slide="prev"/><a class="right carousel-control" href="#carousel-example-generic" data-slide="next"/></div>',i=$(t),a=e.async();i.one("slide.bs.carousel",(function(t){t.preventDefault(),setTimeout((function(){e.ok(i.find(".carousel-item:nth-child(1)").is(".active"),"first item still active"),e.ok(i.find(".carousel-indicators li:nth-child(1)").is(".active"),"first indicator still active"),i.bootstrapCarousel("next")}),0)})).one("slid.bs.carousel",(function(){setTimeout((function(){e.ok(!i.find(".carousel-item:nth-child(1)").is(".active"),"first item still active"),e.ok(!i.find(".carousel-indicators li:nth-child(1)").is(".active"),"first indicator still active"),e.ok(i.find(".carousel-item:nth-child(2)").is(".active"),"second item active"),e.ok(i.find(".carousel-indicators li:nth-child(2)").is(".active"),"second indicator active"),a()}),0)})).bootstrapCarousel("next")})),QUnit.test("should fire slide event with direction",(function(e){e.expect(4);var t='<div id="myCarousel" class="carousel slide"><div class="carousel-inner"><div class="carousel-item active"><img alt=""><div class="carousel-caption"><h4>First Thumbnail label</h4><p>Cras justo odio, dapibus ac facilisis in, egestas eget quam. Donec id elit non mi porta gravida at eget metus. Nullam id dolor id nibh ultricies vehicula ut id elit.</p></div></div><div class="carousel-item"><img alt=""><div class="carousel-caption"><h4>Second Thumbnail label</h4><p>Cras justo odio, dapibus ac facilisis in, egestas eget quam. Donec id elit non mi porta gravida at eget metus. Nullam id dolor id nibh ultricies vehicula ut id elit.</p></div></div><div class="carousel-item"><img alt=""><div class="carousel-caption"><h4>Third Thumbnail label</h4><p>Cras justo odio, dapibus ac facilisis in, egestas eget quam. Donec id elit non mi porta gravida at eget metus. Nullam id dolor id nibh ultricies vehicula ut id elit.</p></div></div></div><a class="left carousel-control" href="#myCarousel" data-slide="prev">&lsaquo;</a><a class="right carousel-control" href="#myCarousel" data-slide="next">&rsaquo;</a></div>',i=$(t),a=e.async();i.one("slide.bs.carousel",(function(t){e.ok(t.direction,"direction present on next"),e.strictEqual(t.direction,"left","direction is left on next"),i.one("slide.bs.carousel",(function(t){e.ok(t.direction,"direction present on prev"),e.strictEqual(t.direction,"right","direction is right on prev"),a()})).bootstrapCarousel("prev")})).bootstrapCarousel("next")})),QUnit.test("should fire slid event with direction",(function(e){e.expect(4);var t='<div id="myCarousel" class="carousel slide"><div class="carousel-inner"><div class="carousel-item active"><img alt=""><div class="carousel-caption"><h4>First Thumbnail label</h4><p>Cras justo odio, dapibus ac facilisis in, egestas eget quam. Donec id elit non mi porta gravida at eget metus. Nullam id dolor id nibh ultricies vehicula ut id elit.</p></div></div><div class="carousel-item"><img alt=""><div class="carousel-caption"><h4>Second Thumbnail label</h4><p>Cras justo odio, dapibus ac facilisis in, egestas eget quam. Donec id elit non mi porta gravida at eget metus. Nullam id dolor id nibh ultricies vehicula ut id elit.</p></div></div><div class="carousel-item"><img alt=""><div class="carousel-caption"><h4>Third Thumbnail label</h4><p>Cras justo odio, dapibus ac facilisis in, egestas eget quam. Donec id elit non mi porta gravida at eget metus. Nullam id dolor id nibh ultricies vehicula ut id elit.</p></div></div></div><a class="left carousel-control" href="#myCarousel" data-slide="prev">&lsaquo;</a><a class="right carousel-control" href="#myCarousel" data-slide="next">&rsaquo;</a></div>',i=$(t),a=e.async();i.one("slid.bs.carousel",(function(t){e.ok(t.direction,"direction present on next"),e.strictEqual(t.direction,"left","direction is left on next"),i.one("slid.bs.carousel",(function(t){e.ok(t.direction,"direction present on prev"),e.strictEqual(t.direction,"right","direction is right on prev"),a()})).bootstrapCarousel("prev")})).bootstrapCarousel("next")})),QUnit.test("should fire slide event with relatedTarget",(function(e){e.expect(2);var t='<div id="myCarousel" class="carousel slide"><div class="carousel-inner"><div class="carousel-item active"><img alt=""><div class="carousel-caption"><h4>First Thumbnail label</h4><p>Cras justo odio, dapibus ac facilisis in, egestas eget quam. Donec id elit non mi porta gravida at eget metus. Nullam id dolor id nibh ultricies vehicula ut id elit.</p></div></div><div class="carousel-item"><img alt=""><div class="carousel-caption"><h4>Second Thumbnail label</h4><p>Cras justo odio, dapibus ac facilisis in, egestas eget quam. Donec id elit non mi porta gravida at eget metus. Nullam id dolor id nibh ultricies vehicula ut id elit.</p></div></div><div class="carousel-item"><img alt=""><div class="carousel-caption"><h4>Third Thumbnail label</h4><p>Cras justo odio, dapibus ac facilisis in, egestas eget quam. Donec id elit non mi porta gravida at eget metus. Nullam id dolor id nibh ultricies vehicula ut id elit.</p></div></div></div><a class="left carousel-control" href="#myCarousel" data-slide="prev">&lsaquo;</a><a class="right carousel-control" href="#myCarousel" data-slide="next">&rsaquo;</a></div>',i=e.async();$(t).on("slide.bs.carousel",(function(t){e.ok(t.relatedTarget,"relatedTarget present"),e.ok($(t.relatedTarget).hasClass("carousel-item"),'relatedTarget has class "item"'),i()})).bootstrapCarousel("next")})),QUnit.test("should fire slid event with relatedTarget",(function(e){e.expect(2);var t='<div id="myCarousel" class="carousel slide"><div class="carousel-inner"><div class="carousel-item active"><img alt=""><div class="carousel-caption"><h4>First Thumbnail label</h4><p>Cras justo odio, dapibus ac facilisis in, egestas eget quam. Donec id elit non mi porta gravida at eget metus. Nullam id dolor id nibh ultricies vehicula ut id elit.</p></div></div><div class="carousel-item"><img alt=""><div class="carousel-caption"><h4>Second Thumbnail label</h4><p>Cras justo odio, dapibus ac facilisis in, egestas eget quam. Donec id elit non mi porta gravida at eget metus. Nullam id dolor id nibh ultricies vehicula ut id elit.</p></div></div><div class="carousel-item"><img alt=""><div class="carousel-caption"><h4>Third Thumbnail label</h4><p>Cras justo odio, dapibus ac facilisis in, egestas eget quam. Donec id elit non mi porta gravida at eget metus. Nullam id dolor id nibh ultricies vehicula ut id elit.</p></div></div></div><a class="left carousel-control" href="#myCarousel" data-slide="prev">&lsaquo;</a><a class="right carousel-control" href="#myCarousel" data-slide="next">&rsaquo;</a></div>',i=e.async();$(t).on("slid.bs.carousel",(function(t){e.ok(t.relatedTarget,"relatedTarget present"),e.ok($(t.relatedTarget).hasClass("carousel-item"),'relatedTarget has class "item"'),i()})).bootstrapCarousel("next")})),QUnit.test("should fire slid and slide events with from and to",(function(e){e.expect(4);var t='<div id="myCarousel" class="carousel slide"><div class="carousel-inner"><div class="carousel-item active"><img alt=""><div class="carousel-caption"><h4>First Thumbnail label</h4></div></div><div class="carousel-item"><img alt=""><div class="carousel-caption"><h4>Second Thumbnail label</h4></div></div><div class="carousel-item"><img alt=""><div class="carousel-caption"><h4>Third Thumbnail label</h4></div></div></div><a class="left carousel-control" href="#myCarousel" data-slide="prev">&lsaquo;</a><a class="right carousel-control" href="#myCarousel" data-slide="next">&rsaquo;</a></div>',i=e.async();$(t).on("slid.bs.carousel",(function(t){e.ok("undefined"!==typeof t.from,"from present"),e.ok("undefined"!==typeof t.to,"to present"),$(this).off(),i()})).on("slide.bs.carousel",(function(t){e.ok("undefined"!==typeof t.from,"from present"),e.ok("undefined"!==typeof t.to,"to present"),$(this).off("slide.bs.carousel")})).bootstrapCarousel("next")})),QUnit.test("should set interval from data attribute",(function(e){e.expect(4);var t='<div id="myCarousel" class="carousel slide"><div class="carousel-inner"><div class="carousel-item active"><img alt=""><div class="carousel-caption"><h4>First Thumbnail label</h4><p>Cras justo odio, dapibus ac facilisis in, egestas eget quam. Donec id elit non mi porta gravida at eget metus. Nullam id dolor id nibh ultricies vehicula ut id elit.</p></div></div><div class="carousel-item"><img alt=""><div class="carousel-caption"><h4>Second Thumbnail label</h4><p>Cras justo odio, dapibus ac facilisis in, egestas eget quam. Donec id elit non mi porta gravida at eget metus. Nullam id dolor id nibh ultricies vehicula ut id elit.</p></div></div><div class="carousel-item"><img alt=""><div class="carousel-caption"><h4>Third Thumbnail label</h4><p>Cras justo odio, dapibus ac facilisis in, egestas eget quam. Donec id elit non mi porta gravida at eget metus. Nullam id dolor id nibh ultricies vehicula ut id elit.</p></div></div></div><a class="left carousel-control" href="#myCarousel" data-slide="prev">&lsaquo;</a><a class="right carousel-control" href="#myCarousel" data-slide="next">&rsaquo;</a></div>',i=$(t);i.attr("data-interval",1814),i.appendTo("body"),$("[data-slide]").first().trigger("click"),e.strictEqual(i.data("bs.carousel")._config.interval,1814),i.remove(),i.appendTo("body").attr("data-modal","foobar"),$("[data-slide]").first().trigger("click"),e.strictEqual(i.data("bs.carousel")._config.interval,1814,"even if there is an data-modal attribute set"),i.remove(),i.appendTo("body"),$("[data-slide]").first().trigger("click"),i.attr("data-interval",1860),$("[data-slide]").first().trigger("click"),e.strictEqual(i.data("bs.carousel")._config.interval,1814,"attributes should be read only on initialization"),i.remove(),i.attr("data-interval",!1),i.appendTo("body"),i.bootstrapCarousel(1),e.strictEqual(i.data("bs.carousel")._config.interval,!1,"data attribute has higher priority than default options"),i.remove()})),QUnit.test("should set interval from data attribute on individual carousel-item",(function(e){e.expect(2);var t='<div id="myCarousel" class="carousel slide" data-interval="1814"><div class="carousel-inner"><div class="carousel-item active" data-interval="2814"><img alt=""><div class="carousel-caption"><h4>First Thumbnail label</h4><p>Cras justo odio, dapibus ac facilisis in, egestas eget quam. Donec id elit non mi porta gravida at eget metus. Nullam id dolor id nibh ultricies vehicula ut id elit.</p></div></div><div class="carousel-item" data-interval="3814"><img alt=""><div class="carousel-caption"><h4>Second Thumbnail label</h4><p>Cras justo odio, dapibus ac facilisis in, egestas eget quam. Donec id elit non mi porta gravida at eget metus. Nullam id dolor id nibh ultricies vehicula ut id elit.</p></div></div><div class="carousel-item"><img alt=""><div class="carousel-caption"><h4>Third Thumbnail label</h4><p>Cras justo odio, dapibus ac facilisis in, egestas eget quam. Donec id elit non mi porta gravida at eget metus. Nullam id dolor id nibh ultricies vehicula ut id elit.</p></div></div></div><a class="left carousel-control" href="#myCarousel" data-slide="prev">&lsaquo;</a><a class="right carousel-control" href="#myCarousel" data-slide="next">&rsaquo;</a></div>',i=$(t);i.appendTo("body"),i.bootstrapCarousel(1),e.strictEqual(i.data("bs.carousel")._config.interval,3814),i.remove(),i.appendTo("body"),i.bootstrapCarousel(2),e.strictEqual(i.data("bs.carousel")._config.interval,1814,"reverts to default interval if no data-interval is set"),i.remove()})),QUnit.test("should skip over non-items when using item indices",(function(e){e.expect(2);var t='<div id="myCarousel" class="carousel" data-interval="1814"><div class="carousel-inner"><div class="carousel-item active"><img alt=""></div><script type="text/x-metamorph" id="thingy"><\/script><div class="carousel-item"><img alt=""></div><div class="carousel-item"></div></div></div>',i=$(t);i.bootstrapCarousel(),e.strictEqual(i.find(".carousel-item")[0],i.find(".active")[0],"first item active"),i.bootstrapCarousel(1),e.strictEqual(i.find(".carousel-item")[1],i.find(".active")[0],"second item active")})),QUnit.test("should skip over non-items when using next/prev methods",(function(e){e.expect(2);var t='<div id="myCarousel" class="carousel" data-interval="1814"><div class="carousel-inner"><div class="carousel-item active"><img alt=""></div><script type="text/x-metamorph" id="thingy"><\/script><div class="carousel-item"><img alt=""></div><div class="carousel-item"></div></div></div>',i=$(t);i.bootstrapCarousel(),e.strictEqual(i.find(".carousel-item")[0],i.find(".active")[0],"first item active"),i.bootstrapCarousel("next"),e.strictEqual(i.find(".carousel-item")[1],i.find(".active")[0],"second item active")})),QUnit.test("should go to previous item if left arrow key is pressed",(function(e){e.expect(2);var t='<div id="myCarousel" class="carousel" data-interval="false"><div class="carousel-inner"><div id="first" class="carousel-item"><img alt=""></div><div id="second" class="carousel-item active"><img alt=""></div><div id="third" class="carousel-item"><img alt=""></div></div></div>',i=$(t);i.bootstrapCarousel(),e.strictEqual(i.find(".carousel-item")[1],i.find(".active")[0],"second item active"),i.trigger($.Event("keydown",{which:37})),e.strictEqual(i.find(".carousel-item")[0],i.find(".active")[0],"first item active")})),QUnit.test("should go to next item if right arrow key is pressed",(function(e){e.expect(2);var t='<div id="myCarousel" class="carousel" data-interval="false"><div class="carousel-inner"><div id="first" class="carousel-item active"><img alt=""></div><div id="second" class="carousel-item"><img alt=""></div><div id="third" class="carousel-item"><img alt=""></div></div></div>',i=$(t);i.bootstrapCarousel(),e.strictEqual(i.find(".carousel-item")[0],i.find(".active")[0],"first item active"),i.trigger($.Event("keydown",{which:39})),e.strictEqual(i.find(".carousel-item")[1],i.find(".active")[0],"second item active")})),QUnit.test("should not prevent keydown if key is not ARROW_LEFT or ARROW_RIGHT",(function(e){e.expect(2);var t='<div id="myCarousel" class="carousel" data-interval="false"><div class="carousel-inner"><div id="first" class="carousel-item active"><img alt=""></div></div></div>',i=$(t);i.bootstrapCarousel();var a=e.async(),s=$.Event("keydown",{which:40}),l=$.Event("keydown",{which:38});i.one("keydown",(function(t){e.strictEqual(t.isDefaultPrevented(),!1)})),i.trigger(s),i.one("keydown",(function(t){e.strictEqual(t.isDefaultPrevented(),!1),a()})),i.trigger(l)})),QUnit.test("should support disabling the keyboard navigation",(function(e){e.expect(3);var t='<div id="myCarousel" class="carousel" data-interval="false" data-keyboard="false"><div class="carousel-inner"><div id="first" class="carousel-item active"><img alt=""></div><div id="second" class="carousel-item"><img alt=""></div><div id="third" class="carousel-item"><img alt=""></div></div></div>',i=$(t);i.bootstrapCarousel(),e.strictEqual(i.find(".carousel-item")[0],i.find(".active")[0],"first item active"),i.trigger($.Event("keydown",{which:39})),e.strictEqual(i.find(".carousel-item")[0],i.find(".active")[0],"first item still active after right arrow press"),i.trigger($.Event("keydown",{which:37})),e.strictEqual(i.find(".carousel-item")[0],i.find(".active")[0],"first item still active after left arrow press")})),QUnit.test("should ignore keyboard events within <input>s and <textarea>s",(function(e){e.expect(7);var t='<div id="myCarousel" class="carousel" data-interval="false"><div class="carousel-inner"><div id="first" class="carousel-item active"><img alt=""><input type="text" id="in-put"><textarea id="text-area"></textarea></div><div id="second" class="carousel-item"><img alt=""></div><div id="third" class="carousel-item"><img alt=""></div></div></div>',i=$(t),a=i.find("#in-put"),s=i.find("#text-area");e.strictEqual(a.length,1,"found <input>"),e.strictEqual(s.length,1,"found <textarea>"),i.bootstrapCarousel(),e.strictEqual(i.find(".carousel-item")[0],i.find(".active")[0],"first item active"),a.trigger($.Event("keydown",{which:39})),e.strictEqual(i.find(".carousel-item")[0],i.find(".active")[0],"first item still active after right arrow press in <input>"),a.trigger($.Event("keydown",{which:37})),e.strictEqual(i.find(".carousel-item")[0],i.find(".active")[0],"first item still active after left arrow press in <input>"),s.trigger($.Event("keydown",{which:39})),e.strictEqual(i.find(".carousel-item")[0],i.find(".active")[0],"first item still active after right arrow press in <textarea>"),s.trigger($.Event("keydown",{which:37})),e.strictEqual(i.find(".carousel-item")[0],i.find(".active")[0],"first item still active after left arrow press in <textarea>")})),QUnit.test("should wrap around from end to start when wrap option is true",(function(e){e.expect(3);var t='<div id="carousel-example-generic" class="carousel slide" data-wrap="true"><ol class="carousel-indicators"><li data-target="#carousel-example-generic" data-slide-to="0" class="active"/><li data-target="#carousel-example-generic" data-slide-to="1"/><li data-target="#carousel-example-generic" data-slide-to="2"/></ol><div class="carousel-inner"><div class="carousel-item active" id="one"><div class="carousel-caption"></div></div><div class="carousel-item" id="two"><div class="carousel-caption"></div></div><div class="carousel-item" id="three"><div class="carousel-caption"></div></div></div><a class="left carousel-control" href="#carousel-example-generic" data-slide="prev"/><a class="right carousel-control" href="#carousel-example-generic" data-slide="next"/></div>',i=$(t),a=function(){return i.find(".carousel-item.active").attr("id")},s=e.async();i.one("slid.bs.carousel",(function(){e.strictEqual(a(),"two","carousel slid from 1st to 2nd slide"),i.one("slid.bs.carousel",(function(){e.strictEqual(a(),"three","carousel slid from 2nd to 3rd slide"),i.one("slid.bs.carousel",(function(){e.strictEqual(a(),"one","carousel wrapped around and slid from 3rd to 1st slide"),s()})).bootstrapCarousel("next")})).bootstrapCarousel("next")})).bootstrapCarousel("next")})),QUnit.test("should wrap around from start to end when wrap option is true",(function(e){e.expect(1);var t='<div id="carousel-example-generic" class="carousel slide" data-wrap="true"><ol class="carousel-indicators"><li data-target="#carousel-example-generic" data-slide-to="0" class="active"/><li data-target="#carousel-example-generic" data-slide-to="1"/><li data-target="#carousel-example-generic" data-slide-to="2"/></ol><div class="carousel-inner"><div class="carousel-item active" id="one"><div class="carousel-caption"></div></div><div class="carousel-item" id="two"><div class="carousel-caption"></div></div><div class="carousel-item" id="three"><div class="carousel-caption"></div></div></div><a class="left carousel-control" href="#carousel-example-generic" data-slide="prev"/><a class="right carousel-control" href="#carousel-example-generic" data-slide="next"/></div>',i=$(t),a=e.async();i.on("slid.bs.carousel",(function(){e.strictEqual(i.find(".carousel-item.active").attr("id"),"three","carousel wrapped around and slid from 1st to 3rd slide"),a()})).bootstrapCarousel("prev")})),QUnit.test("should stay at the end when the next method is called and wrap is false",(function(e){e.expect(3);var t='<div id="carousel-example-generic" class="carousel slide" data-wrap="false"><ol class="carousel-indicators"><li data-target="#carousel-example-generic" data-slide-to="0" class="active"/><li data-target="#carousel-example-generic" data-slide-to="1"/><li data-target="#carousel-example-generic" data-slide-to="2"/></ol><div class="carousel-inner"><div class="carousel-item active" id="one"><div class="carousel-caption"></div></div><div class="carousel-item" id="two"><div class="carousel-caption"></div></div><div class="carousel-item" id="three"><div class="carousel-caption"></div></div></div><a class="left carousel-control" href="#carousel-example-generic" data-slide="prev"/><a class="right carousel-control" href="#carousel-example-generic" data-slide="next"/></div>',i=$(t),a=function(){return i.find(".carousel-item.active").attr("id")},s=e.async();i.one("slid.bs.carousel",(function(){e.strictEqual(a(),"two","carousel slid from 1st to 2nd slide"),i.one("slid.bs.carousel",(function(){e.strictEqual(a(),"three","carousel slid from 2nd to 3rd slide"),i.one("slid.bs.carousel",(function(){e.ok(!1,"carousel slid when it should not have slid")})).bootstrapCarousel("next"),e.strictEqual(a(),"three","carousel did not wrap around and stayed on 3rd slide"),s()})).bootstrapCarousel("next")})).bootstrapCarousel("next")})),QUnit.test("should stay at the start when the prev method is called and wrap is false",(function(e){e.expect(1);var t='<div id="carousel-example-generic" class="carousel slide" data-wrap="false"><ol class="carousel-indicators"><li data-target="#carousel-example-generic" data-slide-to="0" class="active"/><li data-target="#carousel-example-generic" data-slide-to="1"/><li data-target="#carousel-example-generic" data-slide-to="2"/></ol><div class="carousel-inner"><div class="carousel-item active" id="one"><div class="carousel-caption"></div></div><div class="carousel-item" id="two"><div class="carousel-caption"></div></div><div class="carousel-item" id="three"><div class="carousel-caption"></div></div></div><a class="left carousel-control" href="#carousel-example-generic" data-slide="prev"/><a class="right carousel-control" href="#carousel-example-generic" data-slide="next"/></div>',i=$(t);i.on("slid.bs.carousel",(function(){e.ok(!1,"carousel slid when it should not have slid")})).bootstrapCarousel("prev"),e.strictEqual(i.find(".carousel-item.active").attr("id"),"one","carousel did not wrap around and stayed on 1st slide")})),QUnit.test("should not prevent keydown for inputs and textareas",(function(e){e.expect(2);var t='<div id="myCarousel" class="carousel" data-interval="false"><div class="carousel-inner"><div id="first" class="carousel-item"><input type="text" id="inputText" /></div><div id="second" class="carousel-item active"><textarea id="txtArea"></textarea></div></div></div>',i=$(t),a=e.async();i.appendTo("#qunit-fixture");var s=i.find("#inputText"),l=i.find("#txtArea");i.bootstrapCarousel();var o=$.Event("keydown",{which:65});s.on("keydown",(function(t){e.strictEqual(t.isDefaultPrevented(),!1)})),s.trigger(o),l.on("keydown",(function(t){e.strictEqual(t.isDefaultPrevented(),!1),a()})),l.trigger(o)})),QUnit.test("should not go to the next item when the carousel is not visible",(function(e){e.expect(2);var t=e.async(),i='<div id="myCarousel" class="carousel slide" data-interval="50" style="display: none;">  <div class="carousel-inner">    <div id="firstItem" class="carousel-item active">      <img alt="">    </div>    <div class="carousel-item">      <img alt="">    </div>    <div class="carousel-item">      <img alt="">    </div>  <a class="left carousel-control" href="#myCarousel" data-slide="prev">&lsaquo;</a>  <a class="right carousel-control" href="#myCarousel" data-slide="next">&rsaquo;</a></div>',a=$(i);a.appendTo("#qunit-fixture").bootstrapCarousel();var s=$("#firstItem");setTimeout((function(){e.ok(s.hasClass("active")),a.bootstrapCarousel("dispose").attr("style","visibility: hidden;").bootstrapCarousel(),setTimeout((function(){e.ok(s.hasClass("active")),t()}),80)}),80)})),QUnit.test("should not go to the next item when the parent of the carousel is not visible",(function(e){e.expect(2);var t=e.async(),i='<div id="parent" style="display: none;">  <div id="myCarousel" class="carousel slide" data-interval="50" style="display: none;">    <div class="carousel-inner">      <div id="firstItem" class="carousel-item active">        <img alt="">      </div>      <div class="carousel-item">        <img alt="">      </div>      <div class="carousel-item">        <img alt="">      </div>    <a class="left carousel-control" href="#myCarousel" data-slide="prev">&lsaquo;</a>    <a class="right carousel-control" href="#myCarousel" data-slide="next">&rsaquo;</a>  </div></div>',a=$(i);a.appendTo("#qunit-fixture");var s=a.find("#parent"),l=a.find("#myCarousel");l.bootstrapCarousel();var o=$("#firstItem");setTimeout((function(){e.ok(o.hasClass("active")),l.bootstrapCarousel("dispose"),s.attr("style","visibility: hidden;"),l.bootstrapCarousel(),setTimeout((function(){e.ok(o.hasClass("active")),t()}),80)}),80)})),QUnit.test("should allow swiperight and call prev with pointer events",(function(e){if(t){document.documentElement.ontouchstart=$.noop,Simulator.setType("pointer"),e.expect(3);var i=$(s).appendTo("head"),a=e.async(),l='<div class="carousel" data-interval="false">  <div class="carousel-inner">    <div id="item" class="carousel-item">      <img alt="">    </div>    <div class="carousel-item active">      <img alt="">    </div>  </div></div>',o=$(l).appendTo("#qunit-fixture"),r=$("#item");o.bootstrapCarousel();var c=o.data("bs.carousel"),d=sinon.spy(c,"prev");o.one("slid.bs.carousel",(function(){e.ok(!0,"slid event fired"),e.ok(r.hasClass("active")),e.ok(d.called),i.remove(),delete document.documentElement.ontouchstart,a()})),Simulator.gestures.swipe(o[0],{deltaX:300,deltaY:0})}else e.expect(0)})),QUnit.test("should allow swiperight and call prev with touch events",(function(e){Simulator.setType("touch"),i(),e.expect(3);var t=e.async();document.documentElement.ontouchstart=$.noop;var s='<div class="carousel" data-interval="false">  <div class="carousel-inner">    <div id="item" class="carousel-item">      <img alt="">    </div>    <div class="carousel-item active">      <img alt="">    </div>  </div></div>',l=$(s);l.appendTo("#qunit-fixture");var o=$("#item");l.bootstrapCarousel();var r=l.data("bs.carousel"),c=sinon.spy(r,"prev");l.one("slid.bs.carousel",(function(){e.ok(!0,"slid event fired"),e.ok(o.hasClass("active")),e.ok(c.called),delete document.documentElement.ontouchstart,a(),t()})),Simulator.gestures.swipe(l[0],{deltaX:300,deltaY:0})})),QUnit.test("should allow swipeleft and call next with pointer events",(function(e){if(t){document.documentElement.ontouchstart=$.noop,e.expect(4),Simulator.setType("pointer");var i=$(s).appendTo("head"),a=e.async(),l='<div class="carousel" data-interval="false">  <div class="carousel-inner">    <div id="item" class="carousel-item active">      <img alt="">    </div>    <div class="carousel-item">      <img alt="">    </div>  </div></div>',o=$(l);o.appendTo("#qunit-fixture");var r=$("#item");o.bootstrapCarousel();var c=o.data("bs.carousel"),d=sinon.spy(c,"next");o.one("slid.bs.carousel",(function(){e.ok(!0,"slid event fired"),e.ok(!r.hasClass("active")),e.ok(d.called),e.strictEqual(c.touchDeltaX,0),i.remove(),delete document.documentElement.ontouchstart,a()})),Simulator.gestures.swipe(o[0],{pos:[300,10],deltaX:-300,deltaY:0})}else e.expect(0)})),QUnit.test("should allow swipeleft and call next with touch events",(function(e){e.expect(4),i(),Simulator.setType("touch"),document.documentElement.ontouchstart=$.noop;var t=e.async(),s='<div class="carousel" data-interval="false">  <div class="carousel-inner">    <div id="item" class="carousel-item active">      <img alt="">    </div>    <div class="carousel-item">      <img alt="">    </div>  </div></div>',l=$(s);l.appendTo("#qunit-fixture");var o=$("#item");l.bootstrapCarousel();var r=l.data("bs.carousel"),c=sinon.spy(r,"next");l.one("slid.bs.carousel",(function(){e.ok(!0,"slid event fired"),e.ok(!o.hasClass("active")),e.ok(c.called),e.strictEqual(r.touchDeltaX,0),a(),delete document.documentElement.ontouchstart,t()})),Simulator.gestures.swipe(l[0],{pos:[300,10],deltaX:-300,deltaY:0})})),QUnit.test("should not allow pinch with touch events",(function(e){e.expect(0),i(),Simulator.setType("touch");var t=e.async();document.documentElement.ontouchstart=$.noop;var s='<div class="carousel" data-interval="false"></div>',l=$(s);l.appendTo("#qunit-fixture"),l.bootstrapCarousel(),Simulator.gestures.swipe(l[0],{pos:[300,10],deltaX:-300,deltaY:0,touches:2},(function(){a(),delete document.documentElement.ontouchstart,t()}))})),QUnit.test("should not call _slide if the carousel is sliding",(function(e){e.expect(1);var t='<div class="carousel" data-interval="false"></div>',i=$(t);i.appendTo("#qunit-fixture"),i.bootstrapCarousel();var a=i.data("bs.carousel"),s=sinon.spy(a,"_slide");a._isSliding=!0,a.next(),e.strictEqual(s.called,!1)})),QUnit.test("should call next when the page is visible",(function(e){e.expect(1);var t='<div class="carousel" data-interval="false"></div>',i=$(t);i.appendTo("#qunit-fixture"),i.bootstrapCarousel();var a=i.data("bs.carousel"),s=sinon.spy(a,"next"),l=sinon.createSandbox();l.replaceGetter(document,"hidden",(function(){return!1})),l.stub(i,"is").returns(!0),l.stub(i,"css").returns("block"),a.nextWhenVisible(),e.strictEqual(s.called,!0),l.restore()})),QUnit.test("should not cycle when there is no attribute data-ride",(function(e){e.expect(1);var t=sinon.spy(Carousel.prototype,"cycle"),i='<div class="carousel"></div>',a=$(i);a.appendTo("#qunit-fixture"),a.bootstrapCarousel(),e.strictEqual(t.called,!1),t.restore()})),QUnit.test("should cycle when there is data-ride attribute",(function(e){e.expect(1);var t=sinon.spy(Carousel.prototype,"cycle"),i='<div class="carousel" data-ride="carousel"></div>',a=$(i);a.appendTo("#qunit-fixture"),a.bootstrapCarousel(),e.strictEqual(t.called,!0),t.restore()})),QUnit.test("should init carousels with data-ride on load event",(function(e){e.expect(1);var t=e.async(),i=sinon.spy(Carousel,"_jQueryInterface"),a='<div class="carousel" data-ride="carousel"></div>',s=$(a);s.appendTo("#qunit-fixture"),$(window).trigger($.Event("load")),setTimeout((function(){e.strictEqual(i.called,!0),i.restore(),t()}),5)})),QUnit.test("should not add touch event listeners when touch option set to false",(function(e){e.expect(1);var t=sinon.spy(Carousel.prototype,"_addTouchEventListeners"),i=$('<div class="carousel" data-ride="carousel" data-touch="false"></div>');i.appendTo("#qunit-fixture"),i.bootstrapCarousel(),e.strictEqual(t.called,!1),t.restore()}))}));