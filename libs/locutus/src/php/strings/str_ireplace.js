module.exports = function str_ireplace(search, replace, subject, countObj) {
    //  discuss at: https://locutus.io/php/str_ireplace/
    // original by: Glen Arason (https://CanadianDomainRegistry.ca)
    //      note 1: Case-insensitive version of str_replace()
    //      note 1: Compliant with PHP 5.0 str_ireplace() Full details at:
    //      note 1: https://ca3.php.net/manual/en/function.str-ireplace.php
    //      note 2: The countObj parameter (optional) if used must be passed in as a
    //      note 2: object. The count will then be written by reference into it's `value` property
    //   example 1: str_ireplace('M', 'e', 'name')
    //   returns 1: 'naee'
    //   example 2: var $countObj = {}
    //   example 2: str_ireplace('M', 'e', 'name', $countObj)
    //   example 2: var $result = $countObj.value
    //   returns 2: 1
    var i = 0;
    var j = 0;
    var temp = '';
    var repl = '';
    var sl = 0;
    var fl = 0;
    var f = '';
    var r = '';
    var s = '';
    var ra = '';
    var otemp = '';
    var oi = '';
    var ofjl = '';
    var os = subject;
    var osa = Object.prototype.toString.call(os) === '[object Array]';
    // var sa = ''
    if (typeof (search) === 'object') {
        temp = search;
        search = [];
        for (i = 0; i < temp.length; i += 1) {
            search[i] = temp[i].toLowerCase();
        }
    }
    else {
        search = search.toLowerCase();
    }
    if (typeof (subject) === 'object') {
        temp = subject;
        subject = [];
        for (i = 0; i < temp.length; i += 1) {
            subject[i] = temp[i].toLowerCase();
        }
    }
    else {
        subject = subject.toLowerCase();
    }
    if (typeof (search) === 'object' && typeof (replace) === 'string') {
        temp = replace;
        replace = [];
        for (i = 0; i < search.length; i += 1) {
            replace[i] = temp;
        }
    }
    temp = '';
    f = [].concat(search);
    r = [].concat(replace);
    ra = Object.prototype.toString.call(r) === '[object Array]';
    s = subject;
    // sa = Object.prototype.toString.call(s) === '[object Array]'
    s = [].concat(s);
    os = [].concat(os);
    if (countObj) {
        countObj.value = 0;
    }
    for (i = 0, sl = s.length; i < sl; i++) {
        if (s[i] === '') {
            continue;
        }
        for (j = 0, fl = f.length; j < fl; j++) {
            temp = s[i] + '';
            repl = ra ? (r[j] !== undefined ? r[j] : '') : r[0];
            s[i] = (temp).split(f[j]).join(repl);
            otemp = os[i] + '';
            oi = temp.indexOf(f[j]);
            ofjl = f[j].length;
            if (oi >= 0) {
                os[i] = (otemp).split(otemp.substr(oi, ofjl)).join(repl);
            }
            if (countObj) {
                countObj.value += ((temp.split(f[j])).length - 1);
            }
        }
    }
    return osa ? os : os[0];
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RyX2lyZXBsYWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2xvY3V0dXMvc3JjL3BocC9zdHJpbmdzL3N0cl9pcmVwbGFjZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxNQUFNLENBQUMsT0FBTyxHQUFHLFNBQVMsWUFBWSxDQUFFLE1BQU0sRUFBRSxPQUFPLEVBQUUsT0FBTyxFQUFFLFFBQVE7SUFDeEUsb0RBQW9EO0lBQ3BELCtEQUErRDtJQUMvRCx5REFBeUQ7SUFDekQsc0VBQXNFO0lBQ3RFLHVFQUF1RTtJQUN2RSxnRkFBZ0Y7SUFDaEYsOEZBQThGO0lBQzlGLDhDQUE4QztJQUM5QyxzQkFBc0I7SUFDdEIsa0NBQWtDO0lBQ2xDLHlEQUF5RDtJQUN6RCw2Q0FBNkM7SUFDN0MsaUJBQWlCO0lBRWpCLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQTtJQUNULElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQTtJQUNULElBQUksSUFBSSxHQUFHLEVBQUUsQ0FBQTtJQUNiLElBQUksSUFBSSxHQUFHLEVBQUUsQ0FBQTtJQUNiLElBQUksRUFBRSxHQUFHLENBQUMsQ0FBQTtJQUNWLElBQUksRUFBRSxHQUFHLENBQUMsQ0FBQTtJQUNWLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQTtJQUNWLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQTtJQUNWLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQTtJQUNWLElBQUksRUFBRSxHQUFHLEVBQUUsQ0FBQTtJQUNYLElBQUksS0FBSyxHQUFHLEVBQUUsQ0FBQTtJQUNkLElBQUksRUFBRSxHQUFHLEVBQUUsQ0FBQTtJQUNYLElBQUksSUFBSSxHQUFHLEVBQUUsQ0FBQTtJQUNiLElBQUksRUFBRSxHQUFHLE9BQU8sQ0FBQTtJQUNoQixJQUFJLEdBQUcsR0FBRyxNQUFNLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLEtBQUssZ0JBQWdCLENBQUE7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