# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  build:
    docker:
      # Specify the version you desire here
      - image: circleci/php:7.4-node-browsers
        environment:
          APP_ENV: testing
          DB_CONNECTION: mysql
          DB_DATABASE: circle_test
          DB_USERNAME: root
          DB_PASSWORD: ubuntu
          SESSION_DRIVER: database
          CACHE_DRIVER: file

      - image: circleci/mysql:5.7
        environment:
          - MYSQL_ALLOW_EMPTY_PASSWORD=true
          - MYSQL_ROOT_PASSWORD=ubuntu
          - MYSQL_USER=ubuntu
          - MYSQL_PASSWORD=ubuntu
          - MYSQL_DATABASE=circle_test

      - image: circleci/node:10

    steps:
      - run:
          name: Install System Dependencies
          command: |
            sudo apt-get update
            sudo apt-get install -y libmcrypt-dev libsqlite3-dev libfreetype6-dev libjpeg62-turbo-dev libpng-dev zlib1g-dev nodejs
      - run:
          name: Install PHP Extensions
          command: |
            sudo docker-php-ext-configure gd
            sudo docker-php-ext-install -j$(nproc) iconv mcrypt gd zip pdo_mysql pdo_sqlite
            sudo rm /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
      - run:
          name: Update Composer
          command: sudo composer self-update

      - checkout

      - restore_cache:
          keys:
            - composer-v1-{{ checksum "composer.lock" }}
            - composer-v1-
      - run:
          name: Install Composer Dependencies
          command: composer install -n --ignore-platform-reqs --prefer-dist
      - save_cache:
          key: composer-v1-{{ checksum "composer.lock" }}
          paths:
            - vendor

      - restore_cache:
          keys:
            - node-v1-{{ checksum "package.json" }}
            - node-v1-
      - run:
          name: Install Node Dependencies
          command: |
            node --version
            npm --version
            sudo npm install -g gulp typescript grunt eslint tslint snyk
            npm install

      - save_cache:
          key: node-v1-{{ checksum "package.json" }}
          paths:
            - node_modules
