(function(e,t){"use strict";"function"===typeof define&&define.amd?define([],t):"object"===typeof exports?module.exports=t():e.Sass=t()})(this,(function(){var e,t=function(){"use strict";var e="undefined"!==typeof __dirname;if(e)return __dirname;if("undefined"===typeof document||!document.getElementsByTagName)return null;var t=document.currentScript||function(){var e=document.getElementsByTagName("script");return e[e.length-1]}(),r=t&&t.src;return r?"/sass.js"===r.slice(-8)?r.slice(0,-8):"/sass.sync.js"===r.slice(-13)?r.slice(0,-13):null:null}()||".",r=function(){},s=[].slice;function i(t){if(!t&&!e)throw new Error("Sass needs to be initialized with the URL of sass.worker.js - either via Sass.setWorkerUrl(url) or by new Sass(url)");for(var r in e||(e=t),this)"function"===typeof this[r]&&(this[r]=this[r].bind(this));this._callbacks={},this._worker=new Worker(t||e),this._worker.addEventListener("message",this._handleWorkerMessage,!1)}i.setWorkerUrl=function(t){e=t},i.style={nested:0,expanded:1,compact:2,compressed:3},i.comments={none:0,default:1},i.prototype={style:i.style,comments:i.comments,destroy:function(){this._worker&&this._worker.terminate(),this._worker=null,this._callbacks={},this._importer=null},_handleWorkerMessage:function(e){e.data.command&&this[e.data.command](e.data.args),this._callbacks[e.data.id]&&this._callbacks[e.data.id](e.data.result),delete this._callbacks[e.data.id]},_dispatch:function(e,t){if(!this._worker)throw new Error("Sass worker has been terminated");e.id="cb"+Date.now()+Math.random(),this._callbacks[e.id]=t,this._worker.postMessage(e)},_importerInit:function(e){var t=function(e){this._worker.postMessage({command:"_importerFinish",args:[e]})}.bind(this);try{this._importer(e[0],t)}catch(r){throw t({error:r.message}),r}},importer:function(e,t){if("function"!==typeof e&&null!==e)throw new Error("importer callback must either be a function or null");this._importer=e,this._worker.postMessage({command:"importer",args:[Boolean(e)]}),t&&t()}};var n="writeFile readFile listFiles removeFile clearFiles lazyFiles preloadFiles options compile compileFile";return n.split(" ").forEach((function(e){i.prototype[e]=function(){var t=s.call(arguments,-1)[0],i=s.call(arguments,0,-1);"function"!==typeof t&&(i.push(t),t=r),this._dispatch({command:e,args:i},t)}})),i.setWorkerUrl(t+"/sass.worker.js"),i}));