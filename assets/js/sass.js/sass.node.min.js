var Sass=require("./sass.sync.js"),fs=require("fs"),path=require("path");function fileExists(e){var i=fs.statSync(e);return i&&i.isFile()}function removeFileExtension(e){return e.slice(0,e.lastIndexOf("."))}function importFileToSass(e,i){var s="./"+e,r=Sass.findPathVariation(fileExists,s);if(r){var o=!s.endsWith(".css")&&r.endsWith(".css"),t=o?removeFileExtension(r):r,n=fs.readFileSync(r,{encoding:"utf8"});Sass.writeFile(r,n,(function(){i({path:t})}))}else i({error:'File "'+s+'" not found'})}function importerCallback(e,i){importFileToSass(resolve(e),i)}function compileFile(e,i,s){s||(s=i,i={}),Sass.importer(importerCallback),importFileToSass(e,(function(){Sass.compileFile(e,i,s)}))}function resolve(e){return path.normalize(path.join(path.dirname(e.previous.replace(/^\/sass\//,"")),e.current)).replace(/\\/g,"/")}compileFile.importFileToSass=importFileToSass,compileFile.Sass=Sass,module.exports=compileFile;